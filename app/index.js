const express = require('express')
const helmet = require('helmet')
const cors = require('cors')
const hpp = require('hpp')
const cookieParser = require('cookie-parser')
const config = require('../config')
const initUserData = require('../middleware/init')
const blacklist = require('../middleware/blacklist')
const geolocation = require('../middleware/geolocation')
const tracker = require('../middleware/tracker')
const authenticate = require('../middleware/userauth')
const expressLog = require('../config/expressLogger')
const errorLog = require('../config/errorLogger')
const trapRouter = require('../routes/trap')
const indexRouter = require('../routes/index')
const userRouter = require('../routes/user')
const authRouter = require('../routes/auth')
const debugRouter = require('../routes/debug')
const errorRouter = require('../routes/errors')
const errorHandler = require('../middleware/error')

const app = express()
app.set('trust proxy', true)
app.set('x-powered-by', false)
app.set('case sensitive routing', true)
app.set('views', '/var/dev/ai/server/views')
app.set('view engine', 'ejs')

app.use(helmet())
app.use(cors({ origin: config.clientOrigins }))
app.use(express.json())
app.use(express.urlencoded({ extended: false }))
app.use(hpp())
app.use(cookieParser())
app.use(express.static('static', config.static))

app.use(initUserData)
app.use(blacklist)
app.use(geolocation)
app.use(tracker.check)
app.use(authenticate)
app.use(expressLog)

app.use('/', trapRouter)
app.use('/', indexRouter)
app.use('/user', userRouter)
app.use('/auth', authRouter)
app.use('/debug', debugRouter)
app.use('/', errorRouter)

app.use(errorLog)
app.use(errorHandler)

module.exports = app
